# file for using the arduino nano as our adxl accelerometer for input shaping

[mcu nano]
serial: /dev/serial/by-path/platform-3f980000.usb-usb-0:1.5:1.0-port0

[adxl345]
cs_pin: nano:PB2
spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip. The default is 5000000.
#spi_bus:
#spi_software_sclk_pin:
#spi_software_mosi_pin:
#spi_software_miso_pin:
#   See the "common SPI settings" section for a description of the above parameters.
axes_map: z, x, y
#   The accelerometer axis for each of the printer's X, Y, and Z axes.
#   set this to "y, x, z" to swap the X and Y axes.
#   negate an axis if the accelerometer direction is reversed (eg, "x, z, -y").
rate: 3200
#   not recommended to change this rate from the default 3200

[resonance_tester]
accel_chip: adxl345
accel_per_hz: 75
probe_points:
    117.5,117.5,10

[gcode_macro TEST_ACC_SENSOR]
description: run the tests necessary to confirm the accelerometer is functional
gcode:
    {% set FANS_ON = params.FANS_ON|default(0)|int %}
    # query the accelerometer to check if we get (x, y, z) values
    ACCELEROMETER_QUERY
    # measuring the noise without anything running 
    MEASURE_AXES_NOISE
    # measuring the noise with the parts fan on and the Nozzle Fan on
    {% if FANS_ON > 0 %}
        M106 S180 #parts fan
        M104 S36 # turn on the heater to turn on that fan
        MEASURE_AXES_NOISE
    {% endif %}

[gcode_macro X_INPUTSHAPER]
description: run the resonance test for the x axis
gcode:
    {% set FANS_ON = params.FANS_ON|default(0)|int %}
    TEST_ACC_SENSOR FANS_ON={FANS_ON}
    # home the axes
    G28
    TEST_RESONANCES AXIS=X #run the x resonance test
    M104 S0
    M106 S0